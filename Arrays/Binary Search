/*
 *          Binary Search
 *         Prerequisite - sorted arrays 
 */


public class BinarySearch {
    public static int binarySearch(int arr[], int key) {
        int start=0 , end=arr.length-1;
        while(start<=end){
            int mid = (start + end)/2;
            // comparisons
            if(arr[mid]==key){
                return mid;
            }
            if(arr[mid]<key){
                start=mid+1;
            } else{
                end = mid-1;
            }
        }
        return -1;
    }

    public static void main(String[] args) {
        int array[]={2,4,6,8,10,12,14};
        int key=12;
        int index =binarySearch(array,key);

        if(index != -1){
            System.out.println("Element "+ key + " is " + index + " position");
        }else{
            System.out.println("Element "+ key + " is not found!");
        }
    }
}


/*
 *   Output:
 *   Element 12 is 5 position
 */
/*The code you provided is a Java program that performs a binary search on a sorted array to find a specified key element. Here's a breakdown of the code and its output:

In the binarySearch method:

It takes two parameters: the sorted array arr and the key element key to search for.

The method initializes start as 0 (the beginning of the array) and end as the last index of the array (arr.length - 1).

It enters a while loop that continues as long as start is less than or equal to end.

Inside the loop, it calculates the middle index mid as the average of start and end.

It then performs comparisons:

If the element at mid is equal to key, it returns the mid as the position where key is found.
If the element at mid is less than key, it updates start to mid + 1, effectively discarding the left half of the array.
If the element at mid is greater than key, it updates end to mid - 1, effectively discarding the right half of the array.
If the loop completes without finding the key, it returns -1 to indicate that the key is not in the array.

In the main method:

You create an integer array array that is sorted in ascending order.

You specify the key as 12.

You call the binarySearch method with the array and the key.

Depending on the result, you print a message indicating whether the key was found and its position, or if it was not found.

The output of the program demonstrates the binary search result:

arduino
Copy code
Element 12 is 5 position
In this case, the program correctly found that the key element 12 is at position 5 in the sorted array.*/
